{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/CodeStates/agora-states-react/src/Components/Pagination.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { BsArrowLeftSquareFill } from \"react-icons/bs\";\nimport { BsArrowRightSquareFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination(_ref) {\n  _s();\n  let {\n    discussion\n  } = _ref;\n  // 페이지네이션\n  const rowsPerPage = 10; // 한 페이지에 들어가는 요소 수\n  const rows = document.querySelectorAll(\"ul li\");\n  const rowsCount = discussion.length; // newDiscussions로 수정 필요\n  console.log(\"a :\" + discussion);\n  const pageCount = Math.ceil(rowsCount / rowsPerPage);\n  const pageSection = document.querySelector(\".pageItems\");\n  // 화살표 추가\n  const prePageBtn = document.querySelector(\".arrow-left\");\n  const nextPageBtn = document.querySelector(\".arrow-right\");\n  let pageActiveIdx = 0; // 현재 페이지 그룹\n  let currentPageNum = 0; // 현재 보고 있는 페이지네이션 번호\n  let maxPageNum = 5; // 페이지 그룹 내 페이지 최대 개수\n\n  // 페이지 버튼 구현\n  function display(idx) {\n    // idx 0 -> slice(0, 5);   0에서 5까지 요소\n    // idx 1 -> slice(1, 10);   1에서 10까지 요소\n\n    let start = idx * rowsPerPage; // 시작 페이지\n    let end = start + rowsPerPage; // 마지막 페이지\n    let rowsArray = [...rows]; // 유사 배열이므로 배열로 변환\n    console.log(rowsArray);\n    for (let row of rowsArray) {\n      row.style.display = \"none\"; // 처음에 화면에 요소를 모두 안보이게 처리\n    }\n\n    let newRows = rowsArray.slice(start, end);\n    for (let num of newRows) {\n      num.style.display = \"\"; // 새로 만들어준 배열을 보이게 처리\n    }\n  }\n\n  // 페이지 버튼 그룹 구현\n  // 숫자를 받아서 그룹을 보여줌\n  // num = 0 -> slice(0,5)\n  // num = 1 -> slice(0,10)\n  function displayPage(num) {\n    // 페이지 번보 안보이게 처리\n    for (let nu of numberBtn) {\n      nu.style.display = \"none\";\n    }\n    let totalPageCount = Math.ceil(pageCount / maxPageNum);\n    let pageArr = [...numberBtn];\n    let start = num * maxPageNum;\n    console.log(num);\n    console.log(maxPageNum);\n    let end = start + maxPageNum;\n    let pageListArr = pageArr.slice(start, end);\n    for (let item of pageListArr) {\n      item.style.display = \"block\";\n    }\n    if (pageActiveIdx === 0) {\n      prePageBtn.style.display = \"none\";\n    } else {\n      prePageBtn.style.display = \"block\";\n    }\n    if (pageActiveIdx === totalPageCount - 1) {\n      nextPageBtn.style.display = \"none\";\n    } else {\n      nextPageBtn.style.display = \"block\";\n    }\n  }\n  useEffect(() => {\n    display(0);\n    displayPage(0);\n  }, []);\n  nextPageBtn.addEventListener(\"click\", () => {\n    let nextPageNum = pageActiveIdx * maxPageNum + maxPageNum;\n    display(nextPageNum);\n    ++pageActiveIdx;\n    displayPage(pageActiveIdx);\n  });\n  prePageBtn.addEventListener(\"click\", () => {\n    let prePageNum = pageActiveIdx * maxPageNum - maxPageNum;\n    display(prePageNum);\n    --pageActiveIdx;\n    displayPage(pageActiveIdx);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(BsArrowLeftSquareFill, {\n      className: \"arrow-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageItems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BsArrowRightSquareFill, {\n      className: \"arrow-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Pagination, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["useEffect","BsArrowLeftSquareFill","BsArrowRightSquareFill","Pagination","discussion","rowsPerPage","rows","document","querySelectorAll","rowsCount","length","console","log","pageCount","Math","ceil","pageSection","querySelector","prePageBtn","nextPageBtn","pageActiveIdx","currentPageNum","maxPageNum","display","idx","start","end","rowsArray","row","style","newRows","slice","num","displayPage","nu","numberBtn","totalPageCount","pageArr","pageListArr","item","addEventListener","nextPageNum","prePageNum"],"sources":["/Users/minhyunglee/Desktop/CodeStates/agora-states-react/src/Components/Pagination.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { BsArrowLeftSquareFill } from \"react-icons/bs\";\nimport { BsArrowRightSquareFill } from \"react-icons/bs\";\n\nexport default function Pagination({ discussion }) {\n  // 페이지네이션\n  const rowsPerPage = 10; // 한 페이지에 들어가는 요소 수\n  const rows = document.querySelectorAll(\"ul li\");\n  const rowsCount = discussion.length; // newDiscussions로 수정 필요\n  console.log(\"a :\" + discussion);\n  const pageCount = Math.ceil(rowsCount / rowsPerPage);\n  const pageSection = document.querySelector(\".pageItems\");\n  // 화살표 추가\n  const prePageBtn = document.querySelector(\".arrow-left\");\n  const nextPageBtn = document.querySelector(\".arrow-right\");\n  let pageActiveIdx = 0; // 현재 페이지 그룹\n  let currentPageNum = 0; // 현재 보고 있는 페이지네이션 번호\n  let maxPageNum = 5; // 페이지 그룹 내 페이지 최대 개수\n\n  // 페이지 버튼 구현\n  function display(idx) {\n    // idx 0 -> slice(0, 5);   0에서 5까지 요소\n    // idx 1 -> slice(1, 10);   1에서 10까지 요소\n\n    let start = idx * rowsPerPage; // 시작 페이지\n    let end = start + rowsPerPage; // 마지막 페이지\n    let rowsArray = [...rows]; // 유사 배열이므로 배열로 변환\n    console.log(rowsArray);\n    for (let row of rowsArray) {\n      row.style.display = \"none\"; // 처음에 화면에 요소를 모두 안보이게 처리\n    }\n\n    let newRows = rowsArray.slice(start, end);\n    for (let num of newRows) {\n      num.style.display = \"\"; // 새로 만들어준 배열을 보이게 처리\n    }\n  }\n\n  // 페이지 버튼 그룹 구현\n  // 숫자를 받아서 그룹을 보여줌\n  // num = 0 -> slice(0,5)\n  // num = 1 -> slice(0,10)\n  function displayPage(num) {\n    // 페이지 번보 안보이게 처리\n    for (let nu of numberBtn) {\n      nu.style.display = \"none\";\n    }\n    let totalPageCount = Math.ceil(pageCount / maxPageNum);\n    let pageArr = [...numberBtn];\n    let start = num * maxPageNum;\n    console.log(num);\n    console.log(maxPageNum);\n\n    let end = start + maxPageNum;\n    let pageListArr = pageArr.slice(start, end);\n\n    for (let item of pageListArr) {\n      item.style.display = \"block\";\n    }\n    if (pageActiveIdx === 0) {\n      prePageBtn.style.display = \"none\";\n    } else {\n      prePageBtn.style.display = \"block\";\n    }\n\n    if (pageActiveIdx === totalPageCount - 1) {\n      nextPageBtn.style.display = \"none\";\n    } else {\n      nextPageBtn.style.display = \"block\";\n    }\n  }\n\n  useEffect(() => {\n    display(0);\n    displayPage(0);\n  }, []);\n\n  nextPageBtn.addEventListener(\"click\", () => {\n    let nextPageNum = pageActiveIdx * maxPageNum + maxPageNum;\n    display(nextPageNum);\n    ++pageActiveIdx;\n    displayPage(pageActiveIdx);\n  });\n\n  prePageBtn.addEventListener(\"click\", () => {\n    let prePageNum = pageActiveIdx * maxPageNum - maxPageNum;\n    display(prePageNum);\n    --pageActiveIdx;\n    displayPage(pageActiveIdx);\n  });\n\n  return (\n    <div className=\"pagination\">\n      <BsArrowLeftSquareFill className=\"arrow-left\"></BsArrowLeftSquareFill>\n      <ul className=\"pageItems\"></ul>\n      <BsArrowRightSquareFill className=\"arrow-right\"></BsArrowRightSquareFill>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}