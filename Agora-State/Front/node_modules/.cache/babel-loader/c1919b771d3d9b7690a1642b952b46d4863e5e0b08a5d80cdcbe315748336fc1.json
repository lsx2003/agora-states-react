{"ast":null,"code":"var _jsxFileName = \"/Users/minhyunglee/Desktop/CodeStates/agora-states-react/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport MainSection from \"./Components/MainSection\";\nimport Header from \"./Components/Header\";\nimport Discussion from \"./Components/Discussion\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"./Components/Pagination\";\nimport Posts from \"./Components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [discussions, setDiscussions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const indexOfLast = currentPage * postsPerPage;\n  const indexOfFirst = indexOfLast - postsPerPage;\n  const currentPosts = posts => {\n    let currentPosts = 0;\n    currentPosts = posts.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  };\n  useEffect(() => {\n    const fetchData = fetch(\"http://localhost:4000/\").then(data => {\n      setLoading(true);\n      return data.json();\n    }).then(data => setDiscussions(data));\n    setLoading(false);\n  }, []);\n  console.log(discussions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: discussions.length,\n      paginate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Discussion, {\n      posts: currentPosts(discussions),\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"h7Jnbk0dNKHePpJSq6UuqTl3eVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainSection","Header","Discussion","useEffect","useState","Pagination","Posts","App","discussions","setDiscussions","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLast","indexOfFirst","currentPosts","posts","slice","fetchData","fetch","then","data","json","console","log","length"],"sources":["/Users/minhyunglee/Desktop/CodeStates/agora-states-react/src/App.js"],"sourcesContent":["import \"./style.css\";\nimport MainSection from \"./Components/MainSection\";\nimport Header from \"./Components/Header\";\nimport Discussion from \"./Components/Discussion\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"./Components/Pagination\";\nimport Posts from \"./Components/Post\";\n\nfunction App() {\n  const [discussions, setDiscussions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  const indexOfLast = currentPage * postsPerPage;\n  const indexOfFirst = indexOfLast - postsPerPage;\n  const currentPosts = (posts) => {\n    let currentPosts = 0;\n    currentPosts = posts.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  };\n\n  useEffect(() => {\n    const fetchData = fetch(\"http://localhost:4000/\")\n      .then((data) => {\n        setLoading(true);\n        return data.json();\n      })\n      .then((data) => setDiscussions(data));\n    setLoading(false);\n  }, []);\n  console.log(discussions);\n\n  return (\n    <>\n      <Header></Header>\n      <MainSection />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={discussions.length}\n        paginate={setCurrentPage}\n      ></Pagination>\n      <Discussion posts={currentPosts(discussions)} loading={loading} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,mBAAmB;AAAC;AAAA;AAEtC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,WAAW,GAAGJ,WAAW,GAAGE,YAAY;EAC9C,MAAMG,YAAY,GAAGD,WAAW,GAAGF,YAAY;EAC/C,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAID,YAAY,GAAG,CAAC;IACpBA,YAAY,GAAGC,KAAK,CAACC,KAAK,CAACH,YAAY,EAAED,WAAW,CAAC;IACrD,OAAOE,YAAY;EACrB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAGC,KAAK,CAAC,wBAAwB,CAAC,CAC9CC,IAAI,CAAEC,IAAI,IAAK;MACdb,UAAU,CAAC,IAAI,CAAC;MAChB,OAAOa,IAAI,CAACC,IAAI,EAAE;IACpB,CAAC,CAAC,CACDF,IAAI,CAAEC,IAAI,IAAKf,cAAc,CAACe,IAAI,CAAC,CAAC;IACvCb,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACNe,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC;EAExB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACjB,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,UAAU;MACT,YAAY,EAAEM,YAAa;MAC3B,UAAU,EAAEN,WAAW,CAACoB,MAAO;MAC/B,QAAQ,EAAEf;IAAe;MAAA;MAAA;MAAA;IAAA,QACb,eACd,QAAC,UAAU;MAAC,KAAK,EAAEK,YAAY,CAACV,WAAW,CAAE;MAAC,OAAO,EAAEE;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACjE;AAEP;AAAC,GArCQH,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}